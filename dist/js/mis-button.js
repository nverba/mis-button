(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require=="function"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error("Cannot find module '"+o+"'");throw f.code="MODULE_NOT_FOUND",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require=="function"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})({1:[function(require,module,exports){
'use strict';

(function () {
	'use strict';

	var popup = '\n\t\t<div class="misFrame">\n\t\t\t<div class="misSpinner">\n\t\t\t\t<div class="circle1"></div>\n\t\t\t\t<div class="circle2"></div>\n\t\t\t\t<div class="mis-logo"></div>\n\t\t\t\t<p class="loadingText">Loading</p>\n\t\t\t\t<a class="mis-faq" href="https://makeitsocial.com/faq/" target="_blank">Learn more</a>\n\t\t\t</div>\n\t\t\t<div class="draghandle">\n\t\t\t\t<div class="misIco misMin"></div>\n\t\t\t</div>\n\t\t</div>\n\t  <iframe class="MiS_PopUp" src="" style="display:none"></iframe>\n\t';

	var sprite = '<div class="misBtnFill"><div class="misIco misMax"></div></div>';
<<<<<<< HEAD

	var buttons = document.getElementsByClassName("makeitsocial-button");
	var isMobile = navigator.userAgent.match(/Android|BlackBerry|iPhone|iPad|iPod|Opera Mini|IEMobile/i);

	// Create & append the container for opened, minimised popups.
	var minimised = document.createElement('div');
	minimised.className = "misMinimised";
	document.body.appendChild(minimised);

	var dragcanvas = document.createElement('div');
	dragcanvas.className = "dragCanvas";
	document.body.appendChild(dragcanvas);

	var _loop = function () {
		var updatePos = function updatePos(c) {
			container.style.left = c[0] + 'px';
			container.style.top = c[1] + 'px';
		};

		var launchPopup = function launchPopup(e) {
=======
	var buttons = document.getElementsByClassName("makeitsocial-button");
	var isMobile = navigator.userAgent.match(/Android|BlackBerry|iPhone|iPad|iPod|Opera Mini|IEMobile/i);

	// Create & append the container for opened, minimised popups.
	var minimised = document.createElement('div');
	minimised.className = "misMinimised";
	document.body.appendChild(minimised);

	// DragCanvas isolates the popups from any underlying iframes that can capture drop events, a drag event removes the { pointer-events: none } class property.
	var dragcanvas = document.createElement('div');
	dragcanvas.className = "dragCanvas";
	document.body.appendChild(dragcanvas);

	function createButton(button) {

		var active = false;
		var pid = button.getAttribute('data-pid');
		var coords = [window.innerWidth / 2 - 200, 20];
		var offset = [0, 0];

		var container = document.createElement('div');

		container.innerHTML = popup;
		container.setAttribute('draggable', 'true');
		container.setAttribute('ondragstart', "event.dataTransfer.setData('text/plain', 'This text may be dragged')"); // firefox data workaround
		container.className = "misCover";

		var loader = container.getElementsByClassName('misSpinner')[0];
		var iframe = container.getElementsByClassName('MiS_PopUp')[0];
		var minimi = container.getElementsByClassName('misMin')[0];
		var cachedPos = undefined;
		var isMinimised = undefined;

		var maximise = document.createElement('button');
		maximise.className = "misBtn";
		maximise.innerHTML = sprite;
		minimised.appendChild(maximise);

		container.addEventListener("dragend", function (event) {
			dragcanvas.className = "dragCanvas";
			updatePos(coords);
		}, false);

		container.addEventListener("dragstart", function (event) {
			dragcanvas.className = "dragCanvas activeDrag";
			offset = [event.offsetX, event.offsetY];
		}, false);

		dragcanvas.addEventListener("dragover", function (event) {
			event.preventDefault();
			coords = [event.clientX - offset[0], event.clientY - offset[1]];
		}, false);

		dragcanvas.addEventListener("drop", function (event) {
			event.preventDefault();
		}, false);

		function updatePos(c) {
			container.style.left = c[0] + 'px';
			container.style.top = c[1] + 'px';
		}

		function launchPopup(e) {
>>>>>>> b00dc733b78a76dcd677141d766a341f49b02484

			if (isMobile) {
				window.location.href = "https://popup-sandbox.herokuapp.com#/setup?pid=" + pid;
				return;
			}

			// Open only one popup per button;
			if (active) {
<<<<<<< HEAD
				return;
			}

			container.innerHTML = popup;
=======
				if (isMinimised) {
					maximisePopup();
				}
				return;
			}

>>>>>>> b00dc733b78a76dcd677141d766a341f49b02484
			dragcanvas.appendChild(container);
			updatePos([window.innerWidth / 2 - 200, 20]);
			active = true;

<<<<<<< HEAD
			var loader = container.getElementsByClassName('misSpinner')[0];
			var iframe = container.getElementsByClassName('MiS_PopUp')[0];
			var minimi = container.getElementsByClassName('misMin')[0];
			var cachedPos = undefined;

=======
>>>>>>> b00dc733b78a76dcd677141d766a341f49b02484
			iframe.onload = function (e) {
				// Give 1s to let page render with product details
				setTimeout(function () {
					loader.style.display = "none";
					iframe.style.display = "block";
				}, 1000);
			};

			function minimisePopup() {
				cachedPos = [container.offsetLeft, container.offsetTop];
				container.className = "misCover misMoveMin misAnim";
				maximise.className = "misBtn mimimised";
				updatePos([document.body.offsetWidth - 300, document.body.offsetHeight - 100]);
<<<<<<< HEAD
=======
				isMinimised = true;
>>>>>>> b00dc733b78a76dcd677141d766a341f49b02484
			}

			function maximisePopup() {
				container.className = "misCover misAnim";
				maximise.className = "misBtn";
				updatePos(cachedPos);
<<<<<<< HEAD
=======
				isMinimised = false;
>>>>>>> b00dc733b78a76dcd677141d766a341f49b02484
				setTimeout(function () {
					container.className = "misCover";
				}, 500);
			}

			function receiveMessage(event) {
				// This check is essential to avoid xss
				if (event.origin !== "https://popup-sandbox.herokuapp.com" && event.origin !== "https://popup.makeitsocial.com/") {
					return;
				}
				var data = JSON.parse(event.data);
				if (data.pid === pid) {
					maximise.appendChild(document.createTextNode(data.name));
				}
			}

			window.addEventListener("message", receiveMessage, false);
			maximise.addEventListener('click', maximisePopup);
			minimi.addEventListener('click', minimisePopup);
			// used for local testing
			// iframe.setAttribute('src', "http://127.0.0.1:8080/#/setup?pid=" + pid);  
			iframe.setAttribute('src', "https://popup-sandbox.herokuapp.com#/setup?pid=" + pid);
<<<<<<< HEAD
		};

		var button = buttons[i];
		var active = false;
		var pid = button.getAttribute('data-pid');
		var coords = [window.innerWidth / 2 - 200, 20];
		var offset = [0, 0];

		var maximise = document.createElement('button');
		maximise.className = "misBtn";
		maximise.innerHTML = sprite;
		minimised.appendChild(maximise);

		var container = document.createElement('div');
		container.setAttribute('draggable', 'true');
		container.setAttribute('ondragstart', "event.dataTransfer.setData('text/plain', 'This text may be dragged')"); // firefox data workaround
		container.className = "misCover";

		container.addEventListener("dragend", function (event) {
			dragcanvas.className = "dragCanvas";
			updatePos(coords);
		}, false);

		container.addEventListener("dragstart", function (event) {
			dragcanvas.className = "dragCanvas activeDrag";
			offset = [event.offsetX, event.offsetY];
		}, false);

		document.addEventListener("dragover", function (event) {
			coords = [event.clientX - offset[0], event.clientY - offset[1]];
		}, false);

		button.addEventListener('click', launchPopup);
	};

	for (var i = 0; i < buttons.length; i++) {
		_loop();
=======
		}

		button.addEventListener('click', launchPopup);
	}

	for (var i = 0; i < buttons.length; i++) {

		createButton(buttons[i]);
>>>>>>> b00dc733b78a76dcd677141d766a341f49b02484
	}
})();

},{}]},{},[1])
<<<<<<< HEAD
//# sourceMappingURL=data:application/json;charset:utf-8;base64,
=======
//# sourceMappingURL=data:application/json;charset:utf-8;base64,
>>>>>>> b00dc733b78a76dcd677141d766a341f49b02484
